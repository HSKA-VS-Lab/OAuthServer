spring.application.name=oauthserver

server.port=8094
#security.basic.enabled=false

# DB Settings
spring.datasource.url=jdbc:h2:mem:OAuth_DB
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=admin
spring.datasource.password=admin
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=
logging.level.root=INFO

# controls data base migration
#spring.liquibase.enabled=false

# important to solve quite ugly issue
# more info https://hibernate.atlassian.net/browse/HHH-12368
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Eureka Settings
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
# mit Docker
# eureka.client.service-url.defaultZone=${EUREKA_SERVER:http://eureka:8090/eureka}
# eureka.instance.hostname=eureka
# eureka.instance.preferIpAddress=true
# ohne Docker
eureka.client.service-url.defaultZone=http://localhost:8090/eureka/
eureka.instance.instanceId=${spring.application.name}:${random.value}