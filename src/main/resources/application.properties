spring.application.name=oauthserver

server.port=8094

spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=password
logging.level.root=INFO
logging.level.org.springframework.security=DEBUG

# DB Settings
spring.datasource.url=jdbc:h2:mem:OAuth_DB
spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=admin
#spring.datasource.password=admin
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

# Eureka Settings
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
# mit Docker
eureka.client.service-url.defaultZone=${EUREKA_SERVER:http://eureka:8090/eureka}
eureka.instance.hostname=eureka
eureka.instance.preferIpAddress=true
# ohne Docker
#eureka.client.service-url.defaultZone=http://localhost:8090/eureka/
#eureka.instance.instanceId=${spring.application.name}:${random.value}

zuul.host.socket-timeout-millis=20000
zuul.host.connect-timeout-millis=20000
ribbon.ConnectTimeout=10000
ribbon.ReadTimeout=10000

management.endpoints.web.exposure.include=hystrix.stream
management.endpoints.web.base-path=/

#security.oauth2.client.client-id=oauthId
#security.oauth2.client.client-secret=oauthSecret

#security.oauth2.client.grant-type=client_credentials
#security.oauth2.client.access-token-uri=http://localhost:8094/oauth/token
#security.oauth2.resource.user-authorization-uri=http://localhost:8094/oauth/authorize
#security.oauth2.resource.token-info-uri=http://localhost:8094/oauth/check_token
#security.oauth2.resource.user-info-uri=http://localhost:8094/user